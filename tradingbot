import os
import pandas as pd
import robin_stocks.robinhood as rs
from datetime import timedelta, datetime
import datetime as dt
import time
from time import sleep
import tradinghelpers

#Fetch User and Pass

robinuser= os.environ.get("robinhood_username")
robinpass= os.environ.get("robinhood_password")

#Robinhood login
def login():
    rs.login(username="",
         password="",
         expiresIn=86400,
         by_sms=True)

#Robinhood Logout
def logout():
    rs.authentication.logout()

def get_stocks():
    stocks = list()
    stocks.append('NVDA')
    stocks.append('TSLA')
    return (stocks)

def market_open():
    market = True
    time_now = dt.datetime.now().time()

    mark_open = dt.time(8,30,0)
    mark_close = dt.time(14,59,0)

    if time_now > mark_open and time_now < mark_close:
        market = True
    else:
        print("Market is closed")
    return(market)

login()
stocks = get_stocks()
print('stocks:', stocks)

while market_open():
    prices= rs.stocks.get_latest_price(stocks, 'ask_price')

    for i, stock in enumerate(stocks):
        price = float(prices[i])
        print('{} = ${}'.format(stock,price))

    break

test1 = tradinghelpers.rsicheck(stocks)
print(test1)
test2 = tradinghelpers.macdcheck(stocks)
print(test2)
test3 = pd.merge(test1, test2, on="Ticker")
print(test3)




# dropbox_data = rs.stocks.get_stock_historicals("DBX", interval="day", span="week")
# dropbox_historical = pd.DataFrame(dropbox_data)

# box_data = rs.stocks.get_stock_historicals("BOX", interval="day", span="week")
# box_historical = pd.DataFrame(box_data)

# print(dropbox_data)
